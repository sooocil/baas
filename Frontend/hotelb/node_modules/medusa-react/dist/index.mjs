import Ws from"@medusajs/medusa-js";import{QueryClientProvider as Ns}from"@tanstack/react-query";import De from"react";var Tt=De.createContext(null),n=()=>{let e=De.useContext(Tt);if(!e)throw new Error("useMedusa must be used within a MedusaProvider");return e},Lo=({queryClientProviderProps:e,baseUrl:t,apiKey:s,publishableApiKey:r,customHeaders:o,maxRetries:m=3,children:A,medusaClient:V=new Ws({baseUrl:t,maxRetries:m,apiKey:s,publishableApiKey:r,customHeaders:o})})=>De.createElement(Ns,{...e},De.createElement(Tt.Provider,{value:{client:V}},A));import ze,{useContext as Bs,useEffect as ks}from"react";var ve=e=>e instanceof Object,Je=e=>Array.isArray(e),pe=e=>e==null||ve(e)&&Object.keys(e).length===0||Je(e)&&e.length===0||typeof e=="string"&&e.trim().length===0;var Go=({variant:e,region:t,includeTaxes:s=!0,...r})=>{let o=Ys({variant:e,region:t,includeTaxes:s});return Dt({amount:o,currency_code:t?.currency_code,...r})},Ys=({variant:e,region:t,includeTaxes:s=!0})=>{let r=je(e,t);return ht({amount:r,region:t,includeTaxes:s})},je=(e,t)=>e?.prices?.find(r=>r.currency_code.toLowerCase()===t?.currency_code?.toLowerCase())?.amount||0,ht=({amount:e,region:t,includeTaxes:s=!0})=>{let r=Fs(e,t),o=s?Vs(t):0;return r*(1+o)},Wo=({amount:e,region:t,includeTaxes:s=!0,...r})=>{let o=ht({amount:e,region:t,includeTaxes:s});return Dt({amount:o,currency_code:t.currency_code,...r})},ws=["krw","jpy","vnd"],Fs=(e,t)=>{let s=ws.includes(t?.currency_code?.toLowerCase())?1:100;return Math.floor(e)/s},Vs=e=>e&&!pe(e)?e?.tax_rate/100:0,Dt=({amount:e,currency_code:t,minimumFractionDigits:s,maximumFractionDigits:r,locale:o="en-US"})=>t&&!pe(t)?new Intl.NumberFormat(o,{style:"currency",currency:t,minimumFractionDigits:s,maximumFractionDigits:r}).format(e):e.toString();var a=e=>{let t={all:[e],lists:()=>[...t.all,"list"],list:s=>[...t.lists(),{query:s}],details:()=>[...t.all,"detail"],detail:s=>[...t.details(),s]};return t};import*as vt from"react";var Lt=(e,t)=>{let[s,r]=vt.useState(()=>{try{return typeof window<"u"&&window.localStorage.getItem(e)||t}catch{return t}});return[s,A=>{r(A),typeof window<"u"&&window.localStorage.setItem(e,A)},()=>{typeof window<"u"&&window.localStorage.removeItem(e)}]};var It=ze.createContext(null);var Js=(e,t)=>{switch(t.type){case 0:return e;case 6:return xe({...e,region:t.payload},e.items);case 1:{let s=e.items.findIndex(o=>o.variant.id===t.payload?.variant?.id);s!==-1&&e.items.splice(s,1);let r=[...e.items,t.payload];return xe(e,r)}case 4:{let s=e.items.map(r=>r.variant.id===t.payload.id?{...r,...t.payload.item}:r);return xe(e,s)}case 3:{let s=e.items.filter(r=>r.variant.id!==t.payload.id);return xe(e,s)}case 2:return xe(e,t.payload);case 5:return{...e,items:[],total:0,totalItems:0};default:return e}},xe=(e,t)=>{let s=js(e.region,t);return{...e,items:s,totalItems:t.reduce((r,o)=>r+o.quantity,0),total:zs(s)}},js=(e,t)=>t.map(s=>({...s,total:je(s.variant,e)})),zs=e=>e.reduce((t,s)=>t+s.quantity*(s.total||0),0),Hs={region:{},items:[],total:0,totalItems:0},Ho=({initialState:e=Hs,children:t})=>{let[s,r]=Lt("medusa-session-cart",JSON.stringify(e)),[o,m]=ze.useReducer(Js,JSON.parse(s));ks(()=>{r(JSON.stringify(o))},[o,r]);let A=u=>{if(!ve(u)||pe(u))throw new Error("region must be a non-empty object");m({type:6,payload:u})},V=u=>o.items.find(f=>f.variant.id===u),we=u=>{if(!Je(u))throw new Error("items must be an array of items");m({type:2,payload:u})},Fe=u=>{if(!ve(u)||pe(u))throw new Error("item must be a non-empty object");m({type:1,payload:u})},Ve=(u,f)=>{m({type:4,payload:{id:u,item:f}})},g=(u,f)=>{let ke=V(u);ke&&(f=f<=0?1:f,m({type:4,payload:{id:u,item:{...ke,quantity:Math.min(ke.variant.inventory_quantity,f)}}}))},Be=u=>{let f=V(u);f&&m({type:4,payload:{id:u,item:{...f,quantity:Math.min(f.variant.inventory_quantity,f.quantity+1)}}})},_s=u=>{let f=V(u);f&&m({type:4,payload:{id:u,item:{...f,quantity:Math.max(0,f.quantity-1)}}})},bs=u=>{m({type:3,payload:{id:u}})},Gs=()=>{m({type:5})};return ze.createElement(It.Provider,{value:{...o,setRegion:A,addItem:Fe,updateItem:Ve,updateItemQuantity:g,incrementItemQuantity:Be,decrementItemQuantity:_s,removeItem:bs,getItem:V,setItems:we,clearItems:Gs}},t)},Xo=()=>{let e=Bs(It);if(!e)throw new Error("useSessionCart should be used as a child of SessionCartProvider");return e};import et,{useState as Ur}from"react";import{useQuery as Xs}from"@tanstack/react-query";var $s="carts",Zs=a($s),sn=(e,t)=>{let{client:s}=n(),{data:r,...o}=Xs(Zs.detail(e),()=>s.carts.retrieve(e),t);return{...r,...o}};import{useMutation as L}from"@tanstack/react-query";var _t=e=>{let{client:t}=n();return L(s=>t.carts.create(s),e)},bt=(e,t)=>{let{client:s}=n();return L(r=>s.carts.update(e,r),t)},Gt=(e,t)=>{let{client:s}=n();return L(()=>s.carts.complete(e),t)},Wt=(e,t)=>{let{client:s}=n();return L(()=>s.carts.createPaymentSessions(e),t)},mn=(e,t)=>{let{client:s}=n();return L(({data:r,provider_id:o})=>s.carts.updatePaymentSession(e,o,{data:r}),t)},pn=(e,t)=>{let{client:s}=n();return L(({provider_id:r})=>s.carts.refreshPaymentSession(e,r),t)},Nt=(e,t)=>{let{client:s}=n();return L(r=>s.carts.setPaymentSession(e,r),t)},Yt=(e,t)=>{let{client:s}=n();return L(r=>s.carts.addShippingMethod(e,r),t)},dn=(e,t)=>{let{client:s}=n();return L(({provider_id:r})=>s.carts.deletePaymentSession(e,r),t)},un=e=>{let{client:t}=n();return L(async r=>{let{cart:o}=await t.carts.create(r);return(await t.carts.createPaymentSessions(o.id)).cart},e)};import{useQuery as wt}from"@tanstack/react-query";var er="collections",Ft=a(er),Cn=(e,t)=>{let{client:s}=n(),{data:r,...o}=wt(Ft.detail(e),()=>s.collections.retrieve(e),t);return{...r,...o}},On=(e,t)=>{let{client:s}=n(),{data:r,...o}=wt(Ft.list(e),()=>s.collections.list(e),t);return{...r,...o}};import{useQuery as Vt}from"@tanstack/react-query";var tr="customers",He={...a(tr),orders:e=>[...He.detail(e),"orders"]},Mn=e=>{let{client:t}=n(),{data:s,...r}=Vt(He.detail("me"),()=>t.customers.retrieve(),e);return{...s,...r}},Qn=(e={limit:10,offset:0},t)=>{let{client:s}=n(),{data:r,...o}=Vt(He.orders("me"),()=>s.customers.listOrders(e),t);return{...r,...o}};import{useMutation as Bt}from"@tanstack/react-query";var vn=e=>{let{client:t}=n();return Bt(s=>t.customers.create(s),e)},Ln=e=>{let{client:t}=n();return Bt(({id:s,...r})=>t.customers.update(r),e)};import{useQuery as sr}from"@tanstack/react-query";var rr="gift_cards",or=a(rr),wn=(e,t)=>{let{client:s}=n(),{data:r,...o}=sr(or.detail(e),()=>s.giftCards.retrieve(e),t);return{...r,...o}};import{useMutation as Xe}from"@tanstack/react-query";var zn=(e,t)=>{let{client:s}=n();return Xe(r=>s.carts.lineItems.create(e,r),t)},Hn=(e,t)=>{let{client:s}=n();return Xe(({lineId:r,...o})=>s.carts.lineItems.update(e,r,o),t)},Xn=(e,t)=>{let{client:s}=n();return Xe(({lineId:r})=>s.carts.lineItems.delete(e,r),t)};import{useQuery as nr}from"@tanstack/react-query";var ir="orderEdit",de=a(ir),oi=(e,t)=>{let{client:s}=n(),{data:r,...o}=nr(de.detail(e),()=>s.orderEdits.retrieve(e),t);return{...r,...o}};import{useMutation as kt,useQueryClient as Jt}from"@tanstack/react-query";var i=(e,t,s)=>({...s,onSuccess:(...r)=>{if(s?.onSuccess)return s.onSuccess(...r);t!==void 0&&t.forEach(o=>{e.invalidateQueries({queryKey:o})})}});var ci=(e,t)=>{let{client:s}=n(),r=Jt();return kt(o=>s.orderEdits.decline(e,o),i(r,[de.lists(),de.detail(e)],t))},li=(e,t)=>{let{client:s}=n(),r=Jt();return kt(()=>s.orderEdits.complete(e),i(r,[de.lists(),de.detail(e)],t))};import{useQuery as $e}from"@tanstack/react-query";var ar="orders",re={...a(ar),cart:e=>[...re.details(),"cart",e]},gi=(e,t)=>{let{client:s}=n(),{data:r,...o}=$e(re.detail(e),()=>s.orders.retrieve(e),t);return{...r,...o}},xi=(e,t)=>{let{client:s}=n(),{data:r,...o}=$e(re.cart(e),()=>s.orders.retrieveByCartId(e),t);return{...r,...o}},Ei=(e,t)=>{let{client:s}=n(),{data:r,...o}=$e(re.list(e),()=>s.orders.lookupOrder(e),t);return{...r,...o}};import{useMutation as jt,useQueryClient as zt}from"@tanstack/react-query";var Ti=e=>{let{client:t}=n(),s=zt();return jt(r=>t.orders.requestCustomerOrders(r),i(s,[re.all],e))},hi=e=>{let{client:t}=n(),s=zt();return jt(r=>t.orders.confirmRequest(r),i(s,[re.all],e))};import{useQuery as mr}from"@tanstack/react-query";var pr="paymentCollection",U=a(pr),Wi=(e,t)=>{let{client:s}=n(),{data:r,...o}=mr(U.detail(e),()=>s.paymentCollections.retrieve(e),t);return{...r,...o}};import{useMutation as Ee,useQueryClient as Se}from"@tanstack/react-query";var ki=(e,t)=>{let{client:s}=n(),r=Se();return Ee(o=>s.paymentCollections.managePaymentSessionsBatch(e,o),i(r,[U.lists(),U.detail(e)],t))},Ji=(e,t)=>{let{client:s}=n(),r=Se();return Ee(o=>s.paymentCollections.managePaymentSession(e,o),i(r,[U.lists(),U.detail(e)],t))},ji=(e,t)=>{let{client:s}=n(),r=Se();return Ee(o=>s.paymentCollections.authorizePaymentSession(e,o),i(r,[U.lists(),U.detail(e)],t))},zi=(e,t)=>{let{client:s}=n(),r=Se();return Ee(o=>s.paymentCollections.authorizePaymentSessionsBatch(e,o),i(r,[U.lists(),U.detail(e)],t))},Hi=(e,t)=>{let{client:s}=n(),r=Se();return Ee(o=>s.paymentCollections.refreshPaymentSession(e,o),i(r,[U.lists(),U.detail(e)],t))};import{useQuery as Ht}from"@tanstack/react-query";var dr="product_categories",Xt=a(dr),oa=(e,t)=>{let{client:s}=n(),{data:r,...o}=Ht(Xt.list(e),()=>s.productCategories.list(e),t);return{...r,...o}},na=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=Ht(Xt.detail(e),()=>r.productCategories.retrieve(e,t),s);return{...o,...m}};import{useQuery as ur}from"@tanstack/react-query";var cr="product_tags",lr=a(cr),ca=(e,t)=>{let{client:s}=n(),{data:r,...o}=ur(lr.list(e),()=>s.productTags.list(e),t);return{...r,...o}};import{useQuery as Rr}from"@tanstack/react-query";var yr="product_types",Ar=a(yr),Ca=(e,t)=>{let{client:s}=n(),{data:r,...o}=Rr(Ar.list(e),()=>s.productTypes.list(e),t);return{...r,...o}};import{useQuery as $t}from"@tanstack/react-query";var fr="products",Zt=a(fr),qa=(e,t)=>{let{client:s}=n(),{data:r,...o}=$t(Zt.list(e),()=>s.products.list(e),t);return{...r,...o}},Ma=(e,t)=>{let{client:s}=n(),{data:r,...o}=$t(Zt.detail(e),()=>s.products.retrieve(e),t);return{...r,...o}};import{useQuery as es}from"@tanstack/react-query";var Pr="regions",ts=a(Pr),La=e=>{let{client:t}=n(),{data:s,...r}=es(ts.lists(),()=>t.regions.list(),e);return{...s,...r}},Ia=(e,t)=>{let{client:s}=n(),{data:r,...o}=es(ts.detail(e),()=>s.regions.retrieve(e),t);return{...r,...o}};import{useQuery as ss}from"@tanstack/react-query";var Cr="return_reasons",rs=a(Cr),wa=e=>{let{client:t}=n(),{data:s,...r}=ss(rs.lists(),()=>t.returnReasons.list(),e);return{...s,...r}},Fa=(e,t)=>{let{client:s}=n(),{data:r,...o}=ss(rs.detail(e),()=>s.returnReasons.retrieve(e),t);return{...r,...o}};import{useMutation as Or}from"@tanstack/react-query";var Ha=e=>{let{client:t}=n();return Or(s=>t.returns.create(s),e)};import{useQuery as os}from"@tanstack/react-query";var gr="shipping_options",Ze={...a(gr),cart:e=>[...Ze.all,"cart",e]},rm=(e,t)=>{let{client:s}=n(),{data:r,...o}=os(Ze.list(e),async()=>s.shippingOptions.list(e),t);return{...r,...o}},om=(e,t)=>{let{client:s}=n(),{data:r,...o}=os(Ze.cart(e),async()=>s.shippingOptions.listCartOptions(e),t);return{...r,...o}};import{useQuery as xr}from"@tanstack/react-query";var Er="swaps",ns={...a(Er),cart:e=>[...ns.all,"cart",e]},um=(e,t)=>{let{client:s}=n(),{data:r,...o}=xr(ns.cart(e),()=>s.swaps.retrieveByCartId(e),t);return{...r,...o}};import{useMutation as Sr}from"@tanstack/react-query";var Am=e=>{let{client:t}=n();return Sr(s=>t.swaps.create(s),e)};var is=et.createContext(null),Ym=()=>{let e=et.useContext(is);if(!e)throw new Error("useCart must be used within a CartProvider");return e},qr={id:"",items:[]},wm=({children:e,initialState:t=qr})=>{let[s,r]=Ur(t),o=_t({onSuccess:({cart:g})=>r(g)}),m=bt(s?.id,{onSuccess:({cart:g})=>r(g)}),A=Yt(s?.id,{onSuccess:({cart:g})=>r(g)}),V=Wt(s?.id,{onSuccess:({cart:g})=>r(g)}),we=Nt(s?.id,{onSuccess:({cart:g})=>{r(g)}}),Fe=Gt(s?.id),Ve=s?.items.map(g=>g.quantity).reduce((g,Be)=>g+Be,0);return et.createElement(is.Provider,{value:{cart:s,setCart:r,createCart:o,pay:we,startCheckout:V,completeCheckout:Fe,updateCart:m,addShippingMethod:A,totalItems:Ve||0}},e)};import{useQuery as Mr}from"@tanstack/react-query";var Qr="admin_auth",Le=a(Qr),Xm=e=>{let{client:t}=n(),{data:s,...r}=Mr(Le.details(),()=>t.admin.auth.getSession(),e);return{...s,...r}};import{useMutation as as,useQueryClient as ms}from"@tanstack/react-query";var op=e=>{let{client:t}=n(),s=ms();return as(r=>t.admin.auth.createSession(r),i(s,Le.details(),e))},np=e=>{let{client:t}=n(),s=ms();return as(()=>t.admin.auth.deleteSession(),i(s,Le.details(),e))};import{useQuery as ps}from"@tanstack/react-query";var Kr="admin_batches",B=a(Kr),lp=(e,t)=>{let{client:s}=n(),{data:r,...o}=ps(B.list(e),()=>s.admin.batchJobs.list(e),t);return{...r,...o}},Rp=(e,t)=>{let{client:s}=n(),{data:r,...o}=ps(B.detail(e),()=>s.admin.batchJobs.retrieve(e),t);return{...r,...o}};import{useMutation as tt,useQueryClient as st}from"@tanstack/react-query";var gp=e=>{let{client:t}=n(),s=st();return tt(r=>t.admin.batchJobs.create(r),i(s,B.lists(),e))},xp=(e,t)=>{let{client:s}=n(),r=st();return tt(()=>s.admin.batchJobs.cancel(e),i(r,[B.lists(),B.detail(e)],t))},Ep=(e,t)=>{let{client:s}=n(),r=st();return tt(()=>s.admin.batchJobs.confirm(e),i(r,[B.lists(),B.detail(e)],t))};import{useMutation as ue,useQueryClient as ce}from"@tanstack/react-query";import{useQuery as Ie}from"@tanstack/react-query";var Tr="admin_products",d={...a(Tr),detailVariants(e,t){return[...this.detail(e),"variants",{...t||{}}]}},hp=(e,t)=>{let{client:s}=n(),{data:r,...o}=Ie(d.list(e),()=>s.admin.products.list(e),t);return{...r,...o}},Dp=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=Ie(d.detail(e),()=>r.admin.products.retrieve(e,t),s);return{...o,...m}},vp=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=Ie(d.detailVariants(e,t),()=>r.admin.products.listVariants(e,t),s);return{...o,...m}},Lp=e=>{let{client:t}=n(),{data:s,...r}=Ie(d.detail("tags"),()=>t.admin.products.listTags(),e);return{...s,...r}};import{useMutation as G,useQueryClient as W}from"@tanstack/react-query";var Yp=e=>{let{client:t}=n(),s=W();return G(r=>t.admin.products.create(r),i(s,d.lists(),e))},wp=(e,t)=>{let{client:s}=n(),r=W();return G(o=>s.admin.products.update(e,o),i(r,[d.lists(),d.detail(e)],t))},Fp=(e,t)=>{let{client:s}=n(),r=W();return G(()=>s.admin.products.delete(e),i(r,[d.lists(),d.detail(e)],t))},Vp=(e,t)=>{let{client:s}=n(),r=W();return G(o=>s.admin.products.createVariant(e,o),i(r,[d.lists(),d.detail(e)],t))},Bp=(e,t)=>{let{client:s}=n(),r=W();return G(({variant_id:o,...m})=>s.admin.products.updateVariant(e,o,m),i(r,[d.lists(),d.detail(e)],t))},kp=(e,t)=>{let{client:s}=n(),r=W();return G(o=>s.admin.products.deleteVariant(e,o),i(r,[d.lists(),d.detail(e)],t))},Jp=(e,t)=>{let{client:s}=n(),r=W();return G(o=>s.admin.products.addOption(e,o),i(r,d.detail(e),t))},jp=(e,t)=>{let{client:s}=n(),r=W();return G(({option_id:o,...m})=>s.admin.products.updateOption(e,o,m),i(r,d.detail(e),t))},zp=(e,t)=>{let{client:s}=n(),r=W();return G(o=>s.admin.products.deleteOption(e,o),i(r,d.detail(e),t))};import{useQuery as rt}from"@tanstack/react-query";var hr="admin_variants",P=a(hr),rd=(e,t)=>{let{client:s}=n(),{data:r,...o}=rt(P.list(e),()=>s.admin.variants.list(e),t);return{...r,...o}},od=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=rt(P.detail(e),()=>r.admin.variants.retrieve(e,t),s);return{...o,...m}},nd=(e,t)=>{let{client:s}=n(),{data:r,...o}=rt(P.detail(e),()=>s.admin.variants.getInventory(e),t);return{...r,...o}};import{useQuery as ds}from"@tanstack/react-query";var Dr="admin_orders",p={...a(Dr),detailOrder(e,t){return[...this.detail(e),{...t||{}}]}},cd=(e,t)=>{let{client:s}=n(),{data:r,...o}=ds(p.list(e),()=>s.admin.orders.list(e),t);return{...r,...o}},ld=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=ds(p.detailOrder(e,t),()=>r.admin.orders.retrieve(e,t),s);return{...o,...m}};var xd=(e,t)=>{let{client:s}=n(),r=ce();return ue(o=>s.admin.orders.createClaim(e,o),i(r,p.detail(e),t))},Ed=(e,t)=>{let{client:s}=n(),r=ce();return ue(({claim_id:o,...m})=>s.admin.orders.updateClaim(e,o,m),i(r,p.detail(e),t))},Sd=(e,t)=>{let{client:s}=n(),r=ce();return ue(o=>s.admin.orders.cancelClaim(e,o),i(r,p.detail(e),t))},Ud=(e,t)=>{let{client:s}=n(),r=ce();return ue(({claim_id:o,...m})=>s.admin.orders.fulfillClaim(e,o,m),i(r,[p.detail(e),P.all,d.lists()],t))},qd=(e,t)=>{let{client:s}=n(),r=ce();return ue(({claim_id:o,fulfillment_id:m})=>s.admin.orders.cancelClaimFulfillment(e,o,m),i(r,p.detail(e),t))},Md=(e,t)=>{let{client:s}=n(),r=ce();return ue(({claim_id:o,...m})=>s.admin.orders.createClaimShipment(e,o,m),i(r,p.detail(e),t))};import{useQuery as us}from"@tanstack/react-query";var vr="admin_collections",q=a(vr),Ld=(e,t)=>{let{client:s}=n(),{data:r,...o}=us(q.list(e),()=>s.admin.collections.list(e),t);return{...r,...o}},Id=(e,t)=>{let{client:s}=n(),{data:r,...o}=us(q.detail(e),()=>s.admin.collections.retrieve(e),t);return{...r,...o}};import{useMutation as Ue,useQueryClient as qe}from"@tanstack/react-query";var wd=e=>{let{client:t}=n(),s=qe();return Ue(r=>t.admin.collections.create(r),i(s,q.lists(),e))},Fd=(e,t)=>{let{client:s}=n(),r=qe();return Ue(o=>s.admin.collections.update(e,o),i(r,[q.lists(),q.detail(e)],t))},Vd=(e,t)=>{let{client:s}=n(),r=qe();return Ue(()=>s.admin.collections.delete(e),i(r,[q.lists(),q.detail(e)],t))},Bd=(e,t)=>{let{client:s}=n(),r=qe();return Ue(o=>s.admin.collections.addProducts(e,o),i(r,[q.lists(),q.detail(e)],t))},kd=(e,t)=>{let{client:s}=n(),r=qe();return Ue(o=>s.admin.collections.removeProducts(e,o),i(r,[q.lists(),q.detail(e)],t))};import{useMutation as _r,useQueryClient as br}from"@tanstack/react-query";import{useQuery as Lr}from"@tanstack/react-query";var Ir="admin_currencies",_e=a(Ir),eu=(e,t)=>{let{client:s}=n(),{data:r,...o}=Lr(_e.list(e),()=>s.admin.currencies.list(e),t);return{...r,...o}};var au=(e,t)=>{let{client:s}=n(),r=br();return _r(o=>s.admin.currencies.update(e,o),i(r,[_e.lists(),_e.detail(e)],t))};import{useMutation as As,useQueryClient as fs}from"@tanstack/react-query";import{useQuery as ot}from"@tanstack/react-query";var Gr="admin_customer_groups",x={...a(Gr),detailCustomer(e,t){return[...this.detail(e),"customers",{...t||{}}]}},yu=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=ot(x.detail(e),()=>r.admin.customerGroups.retrieve(e,t),s);return{...o,...m}},Au=(e,t)=>{let{client:s}=n(),{data:r,...o}=ot(x.list(e),()=>s.admin.customerGroups.list(e),t);return{...r,...o}},fu=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=ot(x.detailCustomer(e,t),()=>r.admin.customerGroups.listCustomers(e,t),s);return{...o,...m}};import{useMutation as Me,useQueryClient as Qe}from"@tanstack/react-query";var Su=e=>{let{client:t}=n(),s=Qe();return Me(r=>t.admin.customerGroups.create(r),i(s,x.lists(),e))},Uu=(e,t)=>{let{client:s}=n(),r=Qe();return Me(o=>s.admin.customerGroups.update(e,o),i(r,[x.lists(),x.detail(e)],t))},qu=(e,t)=>{let{client:s}=n(),r=Qe();return Me(()=>s.admin.customerGroups.delete(e),i(r,[x.lists(),x.detail(e)],t))},Mu=(e,t)=>{let{client:s}=n(),r=Qe();return Me(o=>s.admin.customerGroups.addCustomers(e,o),i(r,[x.lists(),x.detailCustomer(e)],t))},Qu=(e,t)=>{let{client:s}=n(),r=Qe();return Me(o=>s.admin.customerGroups.removeCustomers(e,o),i(r,[x.lists(),x.detailCustomer(e)],t))};import{useQuery as cs}from"@tanstack/react-query";var Wr="admin_customers",k=a(Wr),_u=(e,t)=>{let{client:s}=n(),{data:r,...o}=cs(k.list(e),()=>s.admin.customers.list(e),t);return{...r,...o}},bu=(e,t)=>{let{client:s}=n(),{data:r,...o}=cs(k.detail(e),()=>s.admin.customers.retrieve(e),t);return{...r,...o}};import{useMutation as ls,useQueryClient as Rs}from"@tanstack/react-query";var Vu=e=>{let{client:t}=n(),s=Rs();return ls(r=>t.admin.customers.create(r),i(s,k.lists(),e))},Bu=(e,t)=>{let{client:s}=n(),r=Rs();return ls(o=>s.admin.customers.update(e,o),i(r,[k.lists(),k.detail(e)],t))};import{useQuery as be}from"@tanstack/react-query";var Nr="admin_discounts",R={...a(Nr),detailCondition(e,t){return[...this.detail(e),"condition",{...t||{}}]}},Zu=(e,t)=>{let{client:s}=n(),{data:r,...o}=be(R.list(e),()=>s.admin.discounts.list(e),t);return{...r,...o}},ec=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=be(R.detail(e),()=>r.admin.discounts.retrieve(e,t),s);return{...o,...m}},tc=(e,t)=>{let{client:s}=n(),{data:r,...o}=be(R.detail(e),()=>s.admin.discounts.retrieveByCode(e),t);return{...r,...o}},sc=(e,t,s,r)=>{let{client:o}=n(),{data:m,...A}=be(R.detailCondition(t),()=>o.admin.discounts.getCondition(e,t,s),r);return{...m,...A}};import{useMutation as M,useQueryClient as Q}from"@tanstack/react-query";var pc=(e,t,s,r)=>{let{client:o}=n(),m=Q();return M(A=>o.admin.discounts.addConditionResourceBatch(e,t,A,s),i(m,R.detail(e),r))},dc=(e,t,s)=>{let{client:r}=n(),o=Q();return M(m=>r.admin.discounts.deleteConditionResourceBatch(e,t,m),i(o,[R.detail(e)],s))},uc=e=>{let{client:t}=n(),s=Q();return M(r=>t.admin.discounts.create(r),i(s,R.lists(),e))},cc=(e,t)=>{let{client:s}=n(),r=Q();return M(o=>s.admin.discounts.update(e,o),i(r,R.detail(e),t))},lc=(e,t)=>{let{client:s}=n(),r=Q();return M(()=>s.admin.discounts.delete(e),i(r,R.lists(),t))},Rc=(e,t)=>{let{client:s}=n(),r=Q();return M(o=>s.admin.discounts.addRegion(e,o),i(r,R.detail(e),t))},yc=(e,t)=>{let{client:s}=n(),r=Q();return M(o=>s.admin.discounts.removeRegion(e,o),i(r,R.detail(e),t))},Ac=(e,t)=>{let{client:s}=n(),r=Q();return M(o=>s.admin.discounts.createDynamicCode(e,o),i(r,[R.lists(),R.detail(e)],t))},fc=(e,t)=>{let{client:s}=n(),r=Q();return M(o=>s.admin.discounts.deleteDynamicCode(e,o),i(r,[R.lists(),R.detail(e)],t))},Pc=(e,t)=>{let{client:s}=n(),r=Q();return M(o=>s.admin.discounts.createCondition(e,o),i(r,R.detail(e),t))},Cc=(e,t,s)=>{let{client:r}=n(),o=Q();return M(m=>r.admin.discounts.updateCondition(e,t,m),i(o,R.detail(e),s))},Oc=(e,t)=>{let{client:s}=n(),r=Q();return M(o=>s.admin.discounts.deleteCondition(e,o),i(r,R.detail(e),t))};import{useQuery as ys}from"@tanstack/react-query";var Yr="admin_gift_cards",I=a(Yr),Qc=(e,t)=>{let{client:s}=n(),{data:r,...o}=ys(I.list(e),()=>s.admin.giftCards.list(e),t);return{...r,...o}},Kc=(e,t)=>{let{client:s}=n(),{data:r,...o}=ys(I.detail(e),()=>s.admin.giftCards.retrieve(e),t);return{...r,...o}};import{useMutation as nt,useQueryClient as it}from"@tanstack/react-query";var _c=e=>{let{client:t}=n(),s=it();return nt(r=>t.admin.giftCards.create(r),i(s,I.lists(),e))},bc=(e,t)=>{let{client:s}=n(),r=it();return nt(o=>s.admin.giftCards.update(e,o),i(r,[I.lists(),I.detail(e)],t))},Gc=(e,t)=>{let{client:s}=n(),r=it();return nt(()=>s.admin.giftCards.delete(e),i(r,[I.lists(),I.detail(e)],t))};import{useMutation as h,useQueryClient as D}from"@tanstack/react-query";var Hc=(e,t)=>{let{client:s}=n(),r=D();return h(o=>s.admin.orders.update(e,o),i(r,[p.lists(),p.detail(e)],t))},Xc=(e,t)=>{let{client:s}=n(),r=D();return h(()=>s.admin.orders.cancel(e),i(r,[p.lists(),p.detail(e)],t))},$c=(e,t)=>{let{client:s}=n(),r=D();return h(()=>s.admin.orders.complete(e),i(r,[p.lists(),p.detail(e)],t))},Zc=(e,t)=>{let{client:s}=n(),r=D();return h(()=>s.admin.orders.capturePayment(e),i(r,[p.lists(),p.detail(e)],t))},el=(e,t)=>{let{client:s}=n(),r=D();return h(o=>s.admin.orders.refundPayment(e,o),i(r,[p.lists(),p.detail(e)],t))},tl=(e,t)=>{let{client:s}=n(),r=D();return h(o=>s.admin.orders.createFulfillment(e,o),i(r,[p.lists(),p.detail(e),P.all,d.lists()],t))},sl=(e,t)=>{let{client:s}=n(),r=D();return h(o=>s.admin.orders.cancelFulfillment(e,o),i(r,[p.lists(),p.detail(e)],t))},rl=(e,t)=>{let{client:s}=n(),r=D();return h(o=>s.admin.orders.createShipment(e,o),i(r,p.detail(e),t))},ol=(e,t)=>{let{client:s}=n(),r=D();return h(o=>s.admin.orders.requestReturn(e,o),i(r,p.detail(e),t))},nl=(e,t)=>{let{client:s}=n(),r=D();return h(o=>s.admin.orders.addShippingMethod(e,o),i(r,p.detail(e),t))},il=(e,t)=>{let{client:s}=n(),r=D();return h(()=>s.admin.orders.archive(e),i(r,[p.lists(),p.detail(e)],t))};import{useQuery as at}from"@tanstack/react-query";var wr="admin_price_lists",c={...a(wr),detailProducts(e,t){return[...this.detail(e),"products",{...t||{}}]}},Rl=(e,t)=>{let{client:s}=n(),{data:r,...o}=at(c.list(e),()=>s.admin.priceLists.list(e),t);return{...r,...o}},yl=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=at(c.detailProducts(e,t),()=>r.admin.priceLists.listProducts(e,t),s);return{...o,...m}},Al=(e,t)=>{let{client:s}=n(),{data:r,...o}=at(c.detail(e),()=>s.admin.priceLists.retrieve(e),t);return{...r,...o}};import{useMutation as J,useQueryClient as j}from"@tanstack/react-query";var Ul=e=>{let{client:t}=n(),s=j();return J(r=>t.admin.priceLists.create(r),i(s,[c.lists()],e))},ql=(e,t)=>{let{client:s}=n(),r=j();return J(o=>s.admin.priceLists.update(e,o),i(r,[c.detail(e),c.lists(),c.detailProducts(e)],t))},Ml=(e,t)=>{let{client:s}=n(),r=j();return J(()=>s.admin.priceLists.delete(e),i(r,[c.detail(e),c.lists()],t))},Ql=(e,t)=>{let{client:s}=n(),r=j();return J(o=>s.admin.priceLists.addPrices(e,o),i(r,[c.detail(e),c.lists(),c.detailProducts(e)],t))},Kl=(e,t)=>{let{client:s}=n(),r=j();return J(o=>s.admin.priceLists.deletePrices(e,o),i(r,[c.detail(e),c.lists(),c.detailProducts(e)],t))},Tl=(e,t)=>{let{client:s}=n(),r=j();return J(o=>s.admin.priceLists.deleteProductsPrices(e,o),i(r,[c.detail(e),c.lists()],t))},hl=(e,t,s)=>{let{client:r}=n(),o=j();return J(()=>r.admin.priceLists.deleteProductPrices(e,t),i(o,[c.detail(e),c.lists(),d.detail(t)],s))},Dl=(e,t,s)=>{let{client:r}=n(),o=j();return J(()=>r.admin.priceLists.deleteVariantPrices(e,t),i(o,[c.detail(e),c.lists(),P.detail(t)],s))};var Fr=(e,t)=>{switch(t){case"product":e.invalidateQueries(d.all);break;case"customer":e.invalidateQueries(k.all);break;case"customer_group":e.invalidateQueries(x.all);break;case"order":e.invalidateQueries(p.all);break;case"discount":e.invalidateQueries(R.all);break;case"gift_card":e.invalidateQueries(I.all);break;case"price_list":e.invalidateQueries(c.all);break}},Ps=(e,t,s,r)=>({...s,onSuccess:(...o)=>(t!==void 0&&t.forEach(m=>{e.invalidateQueries({queryKey:m})}),r&&Object.keys(r).forEach(m=>{r[m]&&Fr(e,m)}),s?.onSuccess?.(...o))}),Vr=(e,t,s,r)=>{let{client:o}=n(),m=fs();return As(A=>o.admin.custom.post(e,A),Ps(m,t,r,s))},Br=(e,t,s,r)=>{let{client:o}=n(),m=fs();return As(()=>o.admin.custom.delete(e),Ps(m,t,r,s))};import{useQuery as kr}from"@tanstack/react-query";var Jr=(e,t,s,r)=>{let{client:o}=n(),{data:m,...A}=kr([e,s,t],()=>o.admin.custom.get(e,s),r);return{data:m,...A}};import{useQuery as Cs}from"@tanstack/react-query";var jr="admin_draft_orders",K=a(jr),iR=(e,t)=>{let{client:s}=n(),{data:r,...o}=Cs(K.list(e),()=>s.admin.draftOrders.list(e),t);return{...r,...o}},aR=(e,t)=>{let{client:s}=n(),{data:r,...o}=Cs(K.detail(e),()=>s.admin.draftOrders.retrieve(e),t);return{...r,...o}};import{useMutation as oe,useQueryClient as ne}from"@tanstack/react-query";var RR=e=>{let{client:t}=n(),s=ne();return oe(r=>t.admin.draftOrders.create(r),i(s,K.lists(),e))},yR=(e,t)=>{let{client:s}=n(),r=ne();return oe(o=>s.admin.draftOrders.update(e,o),i(r,[K.detail(e),K.lists()],t))},AR=(e,t)=>{let{client:s}=n(),r=ne();return oe(()=>s.admin.draftOrders.delete(e),i(r,[K.detail(e),K.lists()],t))},fR=(e,t)=>{let{client:s}=n(),r=ne();return oe(()=>s.admin.draftOrders.markPaid(e),i(r,K.detail(e),t))},PR=(e,t)=>{let{client:s}=n(),r=ne();return oe(o=>s.admin.draftOrders.addLineItem(e,o),i(r,K.detail(e),t))},CR=(e,t)=>{let{client:s}=n(),r=ne();return oe(o=>s.admin.draftOrders.removeLineItem(e,o),i(r,K.detail(e),t))},OR=(e,t)=>{let{client:s}=n(),r=ne();return oe(({item_id:o,...m})=>s.admin.draftOrders.updateLineItem(e,o,m),i(r,K.detail(e),t))};import{useQuery as mt}from"@tanstack/react-query";var zr="admin_inventory_items",C=a(zr),QR=(e,t)=>{let{client:s}=n(),{data:r,...o}=mt(C.list(e),()=>s.admin.inventoryItems.list(e),{...t});return{...r,...o}},KR=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=mt(C.detail(e),()=>r.admin.inventoryItems.retrieve(e,t),{...s});return{...o,...m}},TR=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=mt(C.detail(e),()=>r.admin.inventoryItems.listLocationLevels(e,t),{...s});return{...o,...m}};import{useMutation as le,useQueryClient as Re}from"@tanstack/react-query";var bR=e=>{let{client:t}=n(),s=Re();return le((r,o)=>t.admin.inventoryItems.create(r,o),i(s,[C.lists()],e))},GR=(e,t)=>{let{client:s}=n(),r=Re();return le(o=>s.admin.inventoryItems.update(e,o),i(r,[C.lists(),C.detail(e)],t))},WR=(e,t)=>{let{client:s}=n(),r=Re();return le(()=>s.admin.inventoryItems.delete(e),i(r,[C.lists(),C.detail(e)],t))},NR=(e,t)=>{let{client:s}=n(),r=Re();return le(o=>s.admin.inventoryItems.updateLocationLevel(e,o.stockLocationId,{incoming_quantity:o.incoming_quantity,stocked_quantity:o.stocked_quantity}),i(r,[C.detail(e),C.lists()],t))},YR=(e,t)=>{let{client:s}=n(),r=Re();return le(o=>s.admin.inventoryItems.deleteLocationLevel(e,o),i(r,[C.detail(e),C.lists()],t))},wR=(e,t)=>{let{client:s}=n(),r=Re();return le(o=>s.admin.inventoryItems.createLocationLevel(e,o),i(r,[C.detail(e),C.lists()],t))};import{useQuery as Hr}from"@tanstack/react-query";var Xr="admin_invites",ye=a(Xr),HR=e=>{let{client:t}=n(),{data:s,...r}=Hr(ye.lists(),()=>t.admin.invites.list(),e);return{...s,...r}};import{useMutation as Ge,useQueryClient as pt}from"@tanstack/react-query";var ry=e=>{let{client:t}=n(),s=pt();return Ge(r=>t.admin.invites.accept(r),i(s,ye.lists(),e))},oy=(e,t)=>{let{client:s}=n();return Ge(()=>s.admin.invites.resend(e),t)},ny=e=>{let{client:t}=n(),s=pt();return Ge(r=>t.admin.invites.create(r),i(s,ye.lists(),e))},iy=(e,t)=>{let{client:s}=n(),r=pt();return Ge(()=>s.admin.invites.delete(e),i(r,[ye.lists(),ye.detail(e)],t))};import{useQuery as Os}from"@tanstack/react-query";var $r="admin_notes",z=a($r),Ry=(e,t)=>{let{client:s}=n(),{data:r,...o}=Os(z.list(e),()=>s.admin.notes.list(e),t);return{...r,...o}},yy=(e,t)=>{let{client:s}=n(),{data:r,...o}=Os(z.detail(e),()=>s.admin.notes.retrieve(e),t);return{...r,...o}};import{useMutation as dt,useQueryClient as ut}from"@tanstack/react-query";var xy=e=>{let{client:t}=n(),s=ut();return dt(r=>t.admin.notes.create(r),i(s,z.lists(),e))},Ey=(e,t)=>{let{client:s}=n(),r=ut();return dt(o=>s.admin.notes.update(e,o),i(r,[z.detail(e),z.lists()],t))},Sy=(e,t)=>{let{client:s}=n(),r=ut();return dt(()=>s.admin.notes.delete(e),i(r,[z.detail(e),z.lists()],t))};import{useQuery as Zr}from"@tanstack/react-query";var eo="admin_notifications",We=a(eo),Dy=(e,t)=>{let{client:s}=n(),{data:r,...o}=Zr(We.list(e),()=>s.admin.notifications.list(e),t);return{...r,...o}};import{useMutation as to,useQueryClient as so}from"@tanstack/react-query";var Wy=(e,t)=>{let{client:s}=n(),r=so();return to(o=>s.admin.notifications.resend(e,o),i(r,[We.lists(),We.detail(e)],t))};import{useQuery as gs}from"@tanstack/react-query";var ro="admin_order_edits",l=a(ro),Jy=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=gs(l.detail(e),()=>r.admin.orderEdits.retrieve(e,t),s);return{...o,...m}},jy=(e,t)=>{let{client:s}=n(),{data:r,...o}=gs(l.list(e),()=>s.admin.orderEdits.list(e),t);return{...r,...o}};import{useMutation as _,useQueryClient as b}from"@tanstack/react-query";var sA=e=>{let{client:t}=n(),s=b();return _(r=>t.admin.orderEdits.create(r),i(s,[l.lists(),p.details()],e))},rA=(e,t)=>{let{client:s}=n(),r=b();return _(()=>s.admin.orderEdits.delete(e),i(r,[l.detail(e),l.lists(),p.details()],t))},oA=(e,t,s)=>{let{client:r}=n(),o=b();return _(()=>r.admin.orderEdits.deleteItemChange(e,t),i(o,[l.detail(e),l.lists()],s))},nA=(e,t,s)=>{let{client:r}=n(),o=b();return _(m=>r.admin.orderEdits.updateLineItem(e,t,m),i(o,[l.detail(e),l.lists()],s))},iA=(e,t,s)=>{let{client:r}=n(),o=b();return _(()=>r.admin.orderEdits.removeLineItem(e,t),i(o,[l.detail(e),l.lists()],s))},aA=(e,t)=>{let{client:s}=n(),r=b();return _(o=>s.admin.orderEdits.update(e,o),i(r,[l.lists(),l.detail(e),p.details()],t))},mA=(e,t)=>{let{client:s}=n(),r=b();return _(o=>s.admin.orderEdits.addLineItem(e,o),i(r,[l.lists(),l.detail(e)],t))},pA=(e,t)=>{let{client:s}=n(),r=b();return _(()=>s.admin.orderEdits.requestConfirmation(e),i(r,[l.lists(),l.detail(e),p.details()],t))},dA=(e,t)=>{let{client:s}=n(),r=b();return _(()=>s.admin.orderEdits.cancel(e),i(r,[l.lists(),l.detail(e),p.details()],t))},uA=(e,t)=>{let{client:s}=n(),r=b();return _(()=>s.admin.orderEdits.confirm(e),i(r,[l.lists(),l.detail(e),p.details()],t))};import{useQuery as oo}from"@tanstack/react-query";var no="paymentCollection",H=a(no),CA=(e,t)=>{let{client:s}=n(),{data:r,...o}=oo(H.detail(e),()=>s.admin.paymentCollections.retrieve(e),t);return{...r,...o}};import{useMutation as ct,useQueryClient as lt}from"@tanstack/react-query";var qA=(e,t)=>{let{client:s}=n(),r=lt();return ct(()=>s.admin.paymentCollections.delete(e),i(r,[H.detail(e),H.lists()],t))},MA=(e,t)=>{let{client:s}=n(),r=lt();return ct(o=>s.admin.paymentCollections.update(e,o),i(r,[H.detail(e),H.lists()],t))},QA=(e,t)=>{let{client:s}=n(),r=lt();return ct(()=>s.admin.paymentCollections.markAsAuthorized(e),i(r,[H.detail(e),H.lists()],t))};import{useQuery as io}from"@tanstack/react-query";var ao="payment",Ae=a(ao),_A=(e,t)=>{let{client:s}=n(),{data:r,...o}=io(Ae.detail(e),()=>s.admin.payments.retrieve(e),t);return{...r,...o}};import{useMutation as xs,useQueryClient as Es}from"@tanstack/react-query";var FA=(e,t)=>{let{client:s}=n(),r=Es();return xs(()=>s.admin.payments.capturePayment(e),i(r,[Ae.detail(e),Ae.lists()],t))},VA=(e,t)=>{let{client:s}=n(),r=Es();return xs(o=>s.admin.payments.refundPayment(e,o),i(r,[Ae.detail(e),Ae.lists()],t))};import{useQuery as Ss}from"@tanstack/react-query";var mo="product_categories",T=a(mo),$A=(e,t)=>{let{client:s}=n(),{data:r,...o}=Ss(T.list(e),()=>s.admin.productCategories.list(e),t);return{...r,...o}},ZA=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=Ss(T.detail(e),()=>r.admin.productCategories.retrieve(e,t),s);return{...o,...m}};import{useMutation as Ke,useQueryClient as Te}from"@tanstack/react-query";var mf=e=>{let{client:t}=n(),s=Te();return Ke(r=>t.admin.productCategories.create(r),i(s,[T.list(),d.details()],e))},pf=(e,t)=>{let{client:s}=n(),r=Te();return Ke(o=>s.admin.productCategories.update(e,o),i(r,[T.lists(),T.detail(e),d.details()],t))},df=(e,t)=>{let{client:s}=n(),r=Te();return Ke(()=>s.admin.productCategories.delete(e),i(r,[T.lists(),T.detail(e),d.all],t))},uf=(e,t)=>{let{client:s}=n(),r=Te();return Ke(o=>s.admin.productCategories.addProducts(e,o),i(r,[T.lists(),T.detail(e),d.list({product_category_id:[e]})],t))},cf=(e,t)=>{let{client:s}=n(),r=Te();return Ke(o=>s.admin.productCategories.removeProducts(e,o),i(r,[T.lists(),T.detail(e),d.list({product_category_id:[e]})],t))};import{useQuery as po}from"@tanstack/react-query";var uo="admin_product_tags",co=a(uo),Of=(e,t)=>{let{client:s}=n(),{data:r,...o}=po(co.list(e),()=>s.admin.productTags.list(e),t);return{...r,...o}};import{useQuery as lo}from"@tanstack/react-query";var Ro="admin_product_types",yo=a(Ro),Mf=(e,t)=>{let{client:s}=n(),{data:r,...o}=lo(yo.list(e),()=>s.admin.productTypes.list(e),t);return{...r,...o}};import{useQuery as Rt}from"@tanstack/react-query";var Ao="admin_publishable_api_keys",S={...a(Ao),detailSalesChannels(e,t){return[...this.detail(e),"sales_channels",{...t||{}}]}},Lf=(e,t)=>{let{client:s}=n(),{data:r,...o}=Rt(S.detail(e),()=>s.admin.publishableApiKeys.retrieve(e),t);return{...r,...o}},If=(e,t)=>{let{client:s}=n(),{data:r,...o}=Rt(S.list(e),()=>s.admin.publishableApiKeys.list(e),t);return{...r,...o}},_f=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=Rt(S.detailSalesChannels(e,t),()=>r.admin.publishableApiKeys.listSalesChannels(e,t),s);return{...o,...m}};import{useMutation as fe,useQueryClient as Pe}from"@tanstack/react-query";var Ff=e=>{let{client:t}=n(),s=Pe();return fe(r=>t.admin.publishableApiKeys.create(r),i(s,[S.lists()],e))},Vf=(e,t)=>{let{client:s}=n(),r=Pe();return fe(o=>s.admin.publishableApiKeys.update(e,o),i(r,[S.lists(),S.detail(e),S.details()],t))},Bf=(e,t)=>{let{client:s}=n(),r=Pe();return fe(()=>s.admin.publishableApiKeys.delete(e),i(r,[S.detail(e),S.lists()],t))},kf=(e,t)=>{let{client:s}=n(),r=Pe();return fe(()=>s.admin.publishableApiKeys.revoke(e),i(r,[S.lists(),S.detail(e)],t))},Jf=(e,t)=>{let{client:s}=n(),r=Pe();return fe(o=>s.admin.publishableApiKeys.addSalesChannelsBatch(e,o),i(r,[S.detailSalesChannels(e)],t))},jf=(e,t)=>{let{client:s}=n(),r=Pe();return fe(o=>s.admin.publishableApiKeys.deleteSalesChannelsBatch(e,o),i(r,[S.detailSalesChannels(e)],t))};import{useQuery as yt}from"@tanstack/react-query";var fo="admin_regions",E=a(fo),sP=(e,t)=>{let{client:s}=n(),{data:r,...o}=yt(E.list(e),()=>s.admin.regions.list(e),t);return{...r,...o}},rP=(e,t)=>{let{client:s}=n(),{data:r,...o}=yt(E.detail(e),()=>s.admin.regions.retrieve(e),t);return{...r,...o}},oP=(e,t)=>{let{client:s}=n(),{data:r,...o}=yt(E.detail(`${e}_fullfillment-options`),()=>s.admin.regions.retrieveFulfillmentOptions(e),t);return{...r,...o}};import{useMutation as N,useQueryClient as Y}from"@tanstack/react-query";var uP=e=>{let{client:t}=n(),s=Y();return N(r=>t.admin.regions.create(r),i(s,E.lists(),e))},cP=(e,t)=>{let{client:s}=n(),r=Y();return N(o=>s.admin.regions.update(e,o),i(r,[E.lists(),E.detail(e)],t))},lP=(e,t)=>{let{client:s}=n(),r=Y();return N(()=>s.admin.regions.delete(e),i(r,[E.lists(),E.detail(e)],t))},RP=(e,t)=>{let{client:s}=n(),r=Y();return N(o=>s.admin.regions.addCountry(e,o),i(r,E.detail(e),t))},yP=(e,t)=>{let{client:s}=n(),r=Y();return N(o=>s.admin.regions.deleteCountry(e,o),i(r,E.detail(e),t))},AP=(e,t)=>{let{client:s}=n(),r=Y();return N(o=>s.admin.regions.addFulfillmentProvider(e,o),i(r,E.detail(e),t))},fP=(e,t)=>{let{client:s}=n(),r=Y();return N(o=>s.admin.regions.deleteFulfillmentProvider(e,o),i(r,E.detail(e),t))},PP=(e,t)=>{let{client:s}=n(),r=Y();return N(o=>s.admin.regions.addPaymentProvider(e,o),i(r,E.detail(e),t))},CP=(e,t)=>{let{client:s}=n(),r=Y();return N(o=>s.admin.regions.deletePaymentProvider(e,o),i(r,E.detail(e),t))};import{useMutation as At,useQueryClient as ft}from"@tanstack/react-query";import{useQuery as Us}from"@tanstack/react-query";var Po="admin_reservations",X=a(Po),MP=(e,t)=>{let{client:s}=n(),{data:r,...o}=Us(X.list(e),()=>s.admin.reservations.list(e),{...t});return{...r,...o}},QP=(e,t)=>{let{client:s}=n(),{data:r,...o}=Us(X.detail(e),()=>s.admin.reservations.retrieve(e),t);return{...r,...o}};var bP=e=>{let{client:t}=n(),s=ft();return At(r=>t.admin.reservations.create(r),i(s,[X.lists(),P.all],e))},GP=(e,t)=>{let{client:s}=n(),r=ft();return At(o=>s.admin.reservations.update(e,o),i(r,[X.lists(),X.detail(e),P.all,C.details()],t))},WP=(e,t)=>{let{client:s}=n(),r=ft();return At(()=>s.admin.reservations.delete(e),i(r,[X.lists(),X.detail(e),P.all],t))};import{useQuery as qs}from"@tanstack/react-query";var Co="admin_return_reasons",$=a(Co),JP=e=>{let{client:t}=n(),{data:s,...r}=qs($.lists(),()=>t.admin.returnReasons.list(),e);return{...s,...r}},jP=(e,t)=>{let{client:s}=n(),{data:r,...o}=qs($.detail(e),()=>s.admin.returnReasons.retrieve(e),t);return{...r,...o}};import{useMutation as Pt,useQueryClient as Ct}from"@tanstack/react-query";var tC=e=>{let{client:t}=n(),s=Ct();return Pt(r=>t.admin.returnReasons.create(r),i(s,$.lists(),e))},sC=(e,t)=>{let{client:s}=n(),r=Ct();return Pt(o=>s.admin.returnReasons.update(e,o),i(r,[$.detail(e),$.lists()],t))},rC=(e,t)=>{let{client:s}=n(),r=Ct();return Pt(()=>s.admin.returnReasons.delete(e),i(r,[$.detail(e),$.lists()],t))};import{useQuery as Oo}from"@tanstack/react-query";var go="admin_returns",Ce=a(go),uC=e=>{let{client:t}=n(),{data:s,...r}=Oo(Ce.lists(),()=>t.admin.returns.list(),e);return{...s,...r}};import{useMutation as Ms,useQueryClient as Qs}from"@tanstack/react-query";var PC=(e,t)=>{let{client:s}=n(),r=Qs();return Ms(o=>s.admin.returns.receive(e,o),i(r,[Ce.detail(e),Ce.list()],t))},CC=(e,t)=>{let{client:s}=n(),r=Qs();return Ms(()=>s.admin.returns.cancel(e),i(r,[Ce.detail(e),Ce.list()],t))};import{useQuery as Ks}from"@tanstack/react-query";var xo="admin_sales_channels",O=a(xo),MC=(e,t)=>{let{client:s}=n(),{data:r,...o}=Ks(O.detail(e),()=>s.admin.salesChannels.retrieve(e),t);return{...r,...o}},QC=(e,t)=>{let{client:s}=n(),{data:r,...o}=Ks(O.list(e),()=>s.admin.salesChannels.list(e),t);return{...r,...o}};import{useMutation as ie,useQueryClient as ae}from"@tanstack/react-query";import{useQuery as Ts}from"@tanstack/react-query";var Eo="admin_stock_locations",v=a(Eo),vC=(e,t)=>{let{client:s}=n(),{data:r,...o}=Ts(v.list(e),()=>s.admin.stockLocations.list(e),t);return{...r,...o}},LC=(e,t)=>{let{client:s}=n(),{data:r,...o}=Ts(v.detail(e),()=>s.admin.stockLocations.retrieve(e),t);return{...r,...o}};import{useMutation as Ot,useQueryClient as gt}from"@tanstack/react-query";var FC=e=>{let{client:t}=n(),s=gt();return Ot(r=>t.admin.stockLocations.create(r),i(s,[v.lists()],e))},VC=(e,t)=>{let{client:s}=n(),r=gt();return Ot(o=>s.admin.stockLocations.update(e,o),i(r,[v.lists(),v.detail(e)],t))},BC=(e,t)=>{let{client:s}=n(),r=gt();return Ot(()=>s.admin.stockLocations.delete(e),i(r,[v.lists(),v.detail(e),P.all,d.lists()],t))};var rO=e=>{let{client:t}=n(),s=ae();return ie(r=>t.admin.salesChannels.create(r),i(s,[O.list()],e))},oO=(e,t)=>{let{client:s}=n(),r=ae();return ie(o=>s.admin.salesChannels.update(e,o),i(r,[O.lists(),O.detail(e)],t))},nO=(e,t)=>{let{client:s}=n(),r=ae();return ie(()=>s.admin.salesChannels.delete(e),i(r,[O.lists(),O.detail(e)],t))},iO=(e,t)=>{let{client:s}=n(),r=ae();return ie(o=>s.admin.salesChannels.removeProducts(e,o),i(r,[O.lists(),O.detail(e),d.list({sales_channel_id:[e]})],t))},aO=(e,t)=>{let{client:s}=n(),r=ae();return ie(o=>s.admin.salesChannels.addProducts(e,o),i(r,[O.lists(),O.detail(e),d.list({sales_channel_id:[e]})],t))},mO=e=>{let{client:t}=n(),s=ae();return ie(({sales_channel_id:r,location_id:o})=>t.admin.salesChannels.addLocation(r,{location_id:o}),i(s,[O.lists(),O.details(),v.all],e))},pO=e=>{let{client:t}=n(),s=ae();return ie(({sales_channel_id:r,location_id:o})=>t.admin.salesChannels.removeLocation(r,{location_id:o}),i(s,[O.lists(),O.details(),v.all],e))};import{useQuery as hs}from"@tanstack/react-query";var So="admin_shipping_options",Z=a(So),fO=(e,t)=>{let{client:s}=n(),{data:r,...o}=hs(Z.list(e),()=>s.admin.shippingOptions.list(e),t);return{...r,...o}},PO=(e,t)=>{let{client:s}=n(),{data:r,...o}=hs(Z.detail(e),()=>s.admin.shippingOptions.retrieve(e),t);return{...r,...o}};import{useMutation as xt,useQueryClient as Et}from"@tanstack/react-query";var UO=e=>{let{client:t}=n(),s=Et();return xt(r=>t.admin.shippingOptions.create(r),i(s,Z.lists(),e))},qO=(e,t)=>{let{client:s}=n(),r=Et();return xt(o=>s.admin.shippingOptions.update(e,o),i(r,[Z.lists(),Z.detail(e)],t))},MO=(e,t)=>{let{client:s}=n(),r=Et();return xt(()=>s.admin.shippingOptions.delete(e),i(r,[Z.lists(),Z.detail(e)],t))};import{useQuery as Ds}from"@tanstack/react-query";var Uo="admin_shippingProfiles",ee=a(Uo),IO=e=>{let{client:t}=n(),{data:s,...r}=Ds(ee.lists(),()=>t.admin.shippingProfiles.list(),e);return{...s,...r}},_O=(e,t)=>{let{client:s}=n(),{data:r,...o}=Ds(ee.detail(e),()=>s.admin.shippingProfiles.retrieve(e),t);return{...r,...o}};import{useMutation as St,useQueryClient as Ut}from"@tanstack/react-query";var FO=e=>{let{client:t}=n(),s=Ut();return St(r=>t.admin.shippingProfiles.create(r),i(s,ee.lists(),e))},VO=(e,t)=>{let{client:s}=n(),r=Ut();return St(o=>s.admin.shippingProfiles.update(e,o),i(r,[ee.lists(),ee.detail(e)],t))},BO=(e,t)=>{let{client:s}=n(),r=Ut();return St(()=>s.admin.shippingProfiles.delete(e),i(r,[ee.lists(),ee.detail(e)],t))};import{useQuery as qt}from"@tanstack/react-query";var qo="admin_store",me=a(qo),ZO=e=>{let{client:t}=n(),{data:s,...r}=qt(me.detail("payment_providers"),()=>t.admin.store.listPaymentProviders(),e);return{...s,...r}},eg=e=>{let{client:t}=n(),{data:s,...r}=qt(me.detail("tax_providers"),()=>t.admin.store.listTaxProviders(),e);return{...s,...r}},tg=e=>{let{client:t}=n(),{data:s,...r}=qt(me.details(),()=>t.admin.store.retrieve(),e);return{...s,...r}};import{useMutation as Mt,useQueryClient as Qt}from"@tanstack/react-query";var mg=e=>{let{client:t}=n(),s=Qt();return Mt(r=>t.admin.store.update(r),i(s,me.details(),e))},pg=e=>{let{client:t}=n(),s=Qt();return Mt(r=>t.admin.store.addCurrency(r),i(s,me.details(),e))},dg=e=>{let{client:t}=n(),s=Qt();return Mt(r=>t.admin.store.deleteCurrency(r),i(s,me.details(),e))};import{useQuery as vs}from"@tanstack/react-query";var Mo="admin_swaps",te=a(Mo),Pg=(e,t)=>{let{client:s}=n(),{data:r,...o}=vs(te.list(e),()=>s.admin.swaps.list(e),t);return{...r,...o}},Cg=(e,t)=>{let{client:s}=n(),{data:r,...o}=vs(te.detail(e),()=>s.admin.swaps.retrieve(e),t);return{...r,...o}};import{useMutation as Oe,useQueryClient as ge}from"@tanstack/react-query";var Mg=(e,t)=>{let{client:s}=n(),r=ge();return Oe(o=>s.admin.orders.createSwap(e,o),i(r,[p.detail(e),te.lists()],t))},Qg=(e,t)=>{let{client:s}=n(),r=ge();return Oe(o=>s.admin.orders.cancelSwap(e,o),i(r,[p.detail(e),te.lists()],t))},Kg=(e,t)=>{let{client:s}=n(),r=ge();return Oe(({swap_id:o,...m})=>s.admin.orders.fulfillSwap(e,o,m),i(r,[p.detail(e),te.lists(),P.all,d.lists()],t))},Tg=(e,t)=>{let{client:s}=n(),r=ge();return Oe(({swap_id:o,...m})=>s.admin.orders.createSwapShipment(e,o,m),i(r,p.detail(e),t))},hg=(e,t)=>{let{client:s}=n(),r=ge();return Oe(o=>s.admin.orders.processSwapPayment(e,o),i(r,[p.detail(e),te.lists()],t))},Dg=(e,t)=>{let{client:s}=n(),r=ge();return Oe(({swap_id:o,fulfillment_id:m})=>s.admin.orders.cancelSwapFulfillment(e,o,m),i(r,[p.detail(e),te.lists()],t))};import{useQuery as Ls}from"@tanstack/react-query";var Qo="admin_tax_rates",y=a(Qo),Ng=(e,t)=>{let{client:s}=n(),{data:r,...o}=Ls(y.list(e),()=>s.admin.taxRates.list(e),t);return{...r,...o}},Yg=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=Ls(y.detail(e),()=>r.admin.taxRates.retrieve(e,t),s);return{...o,...m}};import{useMutation as w,useQueryClient as F}from"@tanstack/react-query";var jg=e=>{let{client:t}=n(),s=F();return w(r=>t.admin.taxRates.create(r),i(s,y.lists(),e))},zg=(e,t)=>{let{client:s}=n(),r=F();return w(o=>s.admin.taxRates.update(e,o),i(r,[y.lists(),y.detail(e)],t))},Hg=(e,t)=>{let{client:s}=n(),r=F();return w(()=>s.admin.taxRates.delete(e),i(r,[y.lists(),y.detail(e)],t))},Xg=(e,t)=>{let{client:s}=n(),r=F();return w(o=>s.admin.taxRates.addProducts(e,o),i(r,[y.lists(),y.detail(e)],t))},$g=(e,t)=>{let{client:s}=n(),r=F();return w(o=>s.admin.taxRates.removeProducts(e,o),i(r,[y.lists(),y.detail(e)],t))},Zg=(e,t)=>{let{client:s}=n(),r=F();return w(o=>s.admin.taxRates.addProductTypes(e,o),i(r,[y.lists(),y.detail(e)],t))},ex=(e,t)=>{let{client:s}=n(),r=F();return w(o=>s.admin.taxRates.removeProductTypes(e,o),i(r,[y.lists(),y.detail(e)],t))},tx=(e,t)=>{let{client:s}=n(),r=F();return w(o=>s.admin.taxRates.addShippingOptions(e,o),i(r,[y.lists(),y.detail(e)],t))},sx=(e,t)=>{let{client:s}=n(),r=F();return w(o=>s.admin.taxRates.removeShippingOptions(e,o),i(r,[y.lists(),y.detail(e)],t))};import{useMutation as Ne,useQueryClient as Ye}from"@tanstack/react-query";var ux=e=>{let{client:t}=n(),s=Ye();return Ne(r=>t.admin.uploads.create(r),i(s,void 0,e))},cx=e=>{let{client:t}=n(),s=Ye();return Ne(r=>t.admin.uploads.createProtected(r),i(s,void 0,e))},lx=e=>{let{client:t}=n(),s=Ye();return Ne(r=>t.admin.uploads.getPresignedDownloadUrl(r),i(s,void 0,e))},Rx=e=>{let{client:t}=n(),s=Ye();return Ne(r=>t.admin.uploads.delete(r),i(s,void 0,e))};import{useQuery as Is}from"@tanstack/react-query";var Ko="admin_users",se=a(Ko),gx=(e,t)=>{let{client:s}=n(),{data:r,...o}=Is(se.list(e),()=>s.admin.users.list(e),t);return{...r,...o}},xx=(e,t)=>{let{client:s}=n(),{data:r,...o}=Is(se.detail(e),()=>s.admin.users.retrieve(e),t);return{...r,...o}};import{useMutation as he,useQueryClient as Kt}from"@tanstack/react-query";var Kx=e=>{let{client:t}=n(),s=Kt();return he(r=>t.admin.users.create(r),i(s,se.lists(),e))},Tx=(e,t)=>{let{client:s}=n(),r=Kt();return he(o=>s.admin.users.update(e,o),i(r,[se.lists(),se.detail(e)],t))},hx=(e,t)=>{let{client:s}=n(),r=Kt();return he(()=>s.admin.users.delete(e),i(r,[se.detail(e),se.lists()],t))},Dx=e=>{let{client:t}=n();return he(s=>t.admin.users.resetPassword(s),e)},vx=e=>{let{client:t}=n();return he(s=>t.admin.users.sendResetPasswordToken(s),e)};export{wm as CartProvider,Lo as MedusaProvider,Ho as SessionCartProvider,Le as adminAuthKeys,B as adminBatchJobsKeys,q as adminCollectionKeys,_e as adminCurrenciesKeys,x as adminCustomerGroupKeys,k as adminCustomerKeys,R as adminDiscountKeys,K as adminDraftOrderKeys,I as adminGiftCardKeys,C as adminInventoryItemsKeys,ye as adminInviteKeys,z as adminNoteKeys,We as adminNotificationKeys,l as adminOrderEditsKeys,p as adminOrderKeys,H as adminPaymentCollectionQueryKeys,Ae as adminPaymentQueryKeys,c as adminPriceListKeys,T as adminProductCategoryKeys,d as adminProductKeys,co as adminProductTagKeys,yo as adminProductTypeKeys,S as adminPublishableApiKeysKeys,E as adminRegionKeys,X as adminReservationsKeys,Ce as adminReturnKeys,$ as adminReturnReasonKeys,O as adminSalesChannelsKeys,Z as adminShippingOptionKeys,ee as adminShippingProfileKeys,v as adminStockLocationsKeys,me as adminStoreKeys,te as adminSwapKeys,y as adminTaxRateKeys,se as adminUserKeys,P as adminVariantKeys,Zs as cartKeys,Ft as collectionKeys,ht as computeAmount,Ys as computeVariantPrice,He as customerKeys,Wo as formatAmount,Go as formatVariantPrice,xe as generateCartState,je as getVariantPrice,or as giftCardKeys,de as orderEditQueryKeys,re as orderKeys,U as paymentCollectionQueryKeys,Zt as productKeys,lr as productTagKeys,Ar as productTypeKeys,a as queryKeysFactory,Xt as storeProductCategoryKeys,Yt as useAddShippingMethodToCart,ry as useAdminAcceptInvite,Mu as useAdminAddCustomersToCustomerGroup,pc as useAdminAddDiscountConditionResourceBatch,mO as useAdminAddLocationToSalesChannel,uf as useAdminAddProductsToCategory,Bd as useAdminAddProductsToCollection,aO as useAdminAddProductsToSalesChannel,Jf as useAdminAddPublishableKeySalesChannelsBatch,nl as useAdminAddShippingMethod,pg as useAdminAddStoreCurrency,il as useAdminArchiveOrder,Rp as useAdminBatchJob,lp as useAdminBatchJobs,xp as useAdminCancelBatchJob,Sd as useAdminCancelClaim,qd as useAdminCancelClaimFulfillment,sl as useAdminCancelFulfillment,Xc as useAdminCancelOrder,dA as useAdminCancelOrderEdit,CC as useAdminCancelReturn,Qg as useAdminCancelSwap,Dg as useAdminCancelSwapFulfillment,Zc as useAdminCapturePayment,Id as useAdminCollection,Ld as useAdminCollections,$c as useAdminCompleteOrder,Ep as useAdminConfirmBatchJob,uA as useAdminConfirmOrderEdit,gp as useAdminCreateBatchJob,xd as useAdminCreateClaim,Md as useAdminCreateClaimShipment,wd as useAdminCreateCollection,Vu as useAdminCreateCustomer,Su as useAdminCreateCustomerGroup,uc as useAdminCreateDiscount,RR as useAdminCreateDraftOrder,Ac as useAdminCreateDynamicDiscountCode,tl as useAdminCreateFulfillment,_c as useAdminCreateGiftCard,bR as useAdminCreateInventoryItem,ny as useAdminCreateInvite,wR as useAdminCreateLocationLevel,xy as useAdminCreateNote,sA as useAdminCreateOrderEdit,lx as useAdminCreatePresignedDownloadUrl,Ul as useAdminCreatePriceList,Ql as useAdminCreatePriceListPrices,Yp as useAdminCreateProduct,mf as useAdminCreateProductCategory,Jp as useAdminCreateProductOption,Xg as useAdminCreateProductTaxRates,Zg as useAdminCreateProductTypeTaxRates,Ff as useAdminCreatePublishableApiKey,uP as useAdminCreateRegion,bP as useAdminCreateReservation,tC as useAdminCreateReturnReason,rO as useAdminCreateSalesChannel,rl as useAdminCreateShipment,UO as useAdminCreateShippingOption,FO as useAdminCreateShippingProfile,tx as useAdminCreateShippingTaxRates,FC as useAdminCreateStockLocation,Mg as useAdminCreateSwap,Tg as useAdminCreateSwapShipment,jg as useAdminCreateTaxRate,Kx as useAdminCreateUser,Vp as useAdminCreateVariant,eu as useAdminCurrencies,Br as useAdminCustomDelete,Vr as useAdminCustomPost,Jr as useAdminCustomQuery,bu as useAdminCustomer,yu as useAdminCustomerGroup,fu as useAdminCustomerGroupCustomers,Au as useAdminCustomerGroups,_u as useAdminCustomers,Vd as useAdminDeleteCollection,qu as useAdminDeleteCustomerGroup,lc as useAdminDeleteDiscount,dc as useAdminDeleteDiscountConditionResourceBatch,AR as useAdminDeleteDraftOrder,fc as useAdminDeleteDynamicDiscountCode,Rx as useAdminDeleteFile,Gc as useAdminDeleteGiftCard,WR as useAdminDeleteInventoryItem,iy as useAdminDeleteInvite,YR as useAdminDeleteLocationLevel,Sy as useAdminDeleteNote,rA as useAdminDeleteOrderEdit,oA as useAdminDeleteOrderEditItemChange,qA as useAdminDeletePaymentCollection,Ml as useAdminDeletePriceList,Kl as useAdminDeletePriceListPrices,hl as useAdminDeletePriceListProductPrices,Tl as useAdminDeletePriceListProductsPrices,Dl as useAdminDeletePriceListVariantPrices,Fp as useAdminDeleteProduct,df as useAdminDeleteProductCategory,zp as useAdminDeleteProductOption,$g as useAdminDeleteProductTaxRates,ex as useAdminDeleteProductTypeTaxRates,cf as useAdminDeleteProductsFromCategory,iO as useAdminDeleteProductsFromSalesChannel,Bf as useAdminDeletePublishableApiKey,lP as useAdminDeleteRegion,WP as useAdminDeleteReservation,rC as useAdminDeleteReturnReason,nO as useAdminDeleteSalesChannel,np as useAdminDeleteSession,MO as useAdminDeleteShippingOption,BO as useAdminDeleteShippingProfile,sx as useAdminDeleteShippingTaxRates,BC as useAdminDeleteStockLocation,dg as useAdminDeleteStoreCurrency,Hg as useAdminDeleteTaxRate,hx as useAdminDeleteUser,kp as useAdminDeleteVariant,ec as useAdminDiscount,Rc as useAdminDiscountAddRegion,Pc as useAdminDiscountCreateCondition,Oc as useAdminDiscountRemoveCondition,yc as useAdminDiscountRemoveRegion,Cc as useAdminDiscountUpdateCondition,Zu as useAdminDiscounts,aR as useAdminDraftOrder,PR as useAdminDraftOrderAddLineItem,fR as useAdminDraftOrderRegisterPayment,CR as useAdminDraftOrderRemoveLineItem,OR as useAdminDraftOrderUpdateLineItem,iR as useAdminDraftOrders,Ud as useAdminFulfillClaim,Kg as useAdminFulfillSwap,tc as useAdminGetDiscountByCode,sc as useAdminGetDiscountCondition,Xm as useAdminGetSession,Kc as useAdminGiftCard,Qc as useAdminGiftCards,KR as useAdminInventoryItem,TR as useAdminInventoryItemLocationLevels,QR as useAdminInventoryItems,HR as useAdminInvites,op as useAdminLogin,QA as useAdminMarkPaymentCollectionAsAuthorized,yy as useAdminNote,Ry as useAdminNotes,Dy as useAdminNotifications,ld as useAdminOrder,Jy as useAdminOrderEdit,mA as useAdminOrderEditAddLineItem,iA as useAdminOrderEditDeleteLineItem,nA as useAdminOrderEditUpdateLineItem,jy as useAdminOrderEdits,cd as useAdminOrders,_A as useAdminPayment,CA as useAdminPaymentCollection,FA as useAdminPaymentsCapturePayment,VA as useAdminPaymentsRefundPayment,Al as useAdminPriceList,yl as useAdminPriceListProducts,Rl as useAdminPriceLists,hg as useAdminProcessSwapPayment,Dp as useAdminProduct,$A as useAdminProductCategories,ZA as useAdminProductCategory,Lp as useAdminProductTagUsage,Of as useAdminProductTags,Mf as useAdminProductTypes,vp as useAdminProductVariants,hp as useAdminProducts,Lf as useAdminPublishableApiKey,_f as useAdminPublishableApiKeySalesChannels,If as useAdminPublishableApiKeys,PC as useAdminReceiveReturn,el as useAdminRefundPayment,rP as useAdminRegion,RP as useAdminRegionAddCountry,AP as useAdminRegionAddFulfillmentProvider,PP as useAdminRegionAddPaymentProvider,fP as useAdminRegionDeleteFulfillmentProvider,CP as useAdminRegionDeletePaymentProvider,oP as useAdminRegionFulfillmentOptions,yP as useAdminRegionRemoveCountry,sP as useAdminRegions,Qu as useAdminRemoveCustomersFromCustomerGroup,pO as useAdminRemoveLocationFromSalesChannel,kd as useAdminRemoveProductsFromCollection,jf as useAdminRemovePublishableKeySalesChannelsBatch,pA as useAdminRequestOrderEditConfirmation,ol as useAdminRequestReturn,oy as useAdminResendInvite,Wy as useAdminResendNotification,QP as useAdminReservation,MP as useAdminReservations,Dx as useAdminResetPassword,jP as useAdminReturnReason,JP as useAdminReturnReasons,uC as useAdminReturns,kf as useAdminRevokePublishableApiKey,MC as useAdminSalesChannel,QC as useAdminSalesChannels,vx as useAdminSendResetPasswordToken,PO as useAdminShippingOption,fO as useAdminShippingOptions,_O as useAdminShippingProfile,IO as useAdminShippingProfiles,LC as useAdminStockLocation,vC as useAdminStockLocations,tg as useAdminStore,ZO as useAdminStorePaymentProviders,eg as useAdminStoreTaxProviders,Cg as useAdminSwap,Pg as useAdminSwaps,Yg as useAdminTaxRate,Ng as useAdminTaxRates,Ed as useAdminUpdateClaim,Fd as useAdminUpdateCollection,au as useAdminUpdateCurrency,Bu as useAdminUpdateCustomer,Uu as useAdminUpdateCustomerGroup,cc as useAdminUpdateDiscount,yR as useAdminUpdateDraftOrder,bc as useAdminUpdateGiftCard,GR as useAdminUpdateInventoryItem,NR as useAdminUpdateLocationLevel,Ey as useAdminUpdateNote,Hc as useAdminUpdateOrder,aA as useAdminUpdateOrderEdit,MA as useAdminUpdatePaymentCollection,ql as useAdminUpdatePriceList,wp as useAdminUpdateProduct,pf as useAdminUpdateProductCategory,jp as useAdminUpdateProductOption,Vf as useAdminUpdatePublishableApiKey,cP as useAdminUpdateRegion,GP as useAdminUpdateReservation,sC as useAdminUpdateReturnReason,oO as useAdminUpdateSalesChannel,qO as useAdminUpdateShippingOption,VO as useAdminUpdateShippingProfile,VC as useAdminUpdateStockLocation,mg as useAdminUpdateStore,zg as useAdminUpdateTaxRate,Tx as useAdminUpdateUser,Bp as useAdminUpdateVariant,ux as useAdminUploadFile,cx as useAdminUploadProtectedFile,xx as useAdminUser,gx as useAdminUsers,od as useAdminVariant,rd as useAdminVariants,nd as useAdminVariantsInventory,ji as useAuthorizePaymentSession,zi as useAuthorizePaymentSessionsBatch,Ym as useCart,xi as useCartOrder,om as useCartShippingOptions,um as useCartSwap,Cn as useCollection,On as useCollections,Gt as useCompleteCart,li as useCompleteOrderEdit,_t as useCreateCart,vn as useCreateCustomer,zn as useCreateLineItem,Wt as useCreatePaymentSession,Ha as useCreateReturn,Am as useCreateSwap,Qn as useCustomerOrders,ci as useDeclineOrderEdit,Xn as useDeleteLineItem,dn as useDeletePaymentSession,sn as useGetCart,wn as useGiftCard,hi as useGrantOrderAccess,Lt as useLocalStorage,ki as useManageMultiplePaymentSessions,Ji as useManagePaymentSession,Mn as useMeCustomer,n as useMedusa,gi as useOrder,oi as useOrderEdit,Ei as useOrders,Wi as usePaymentCollection,Hi as usePaymentCollectionRefreshPaymentSession,Ma as useProduct,oa as useProductCategories,na as useProductCategory,ca as useProductTags,Ca as useProductTypes,qa as useProducts,pn as useRefreshPaymentSession,Ia as useRegion,La as useRegions,Ti as useRequestOrderAccess,Fa as useReturnReason,wa as useReturnReasons,Xo as useSessionCart,Nt as useSetPaymentSession,rm as useShippingOptions,un as useStartCheckout,bt as useUpdateCart,Hn as useUpdateLineItem,Ln as useUpdateMe,mn as useUpdatePaymentSession};
//# sourceMappingURL=index.mjs.map